/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GDB.gui;

import GDB.dao.DatabaseDAO;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author RISHABH SAHU
 */
public class InsertQueryFrame extends javax.swing.JFrame {

    /**
     * Creates new form InsertQueryFrame
     */
    private int count=0,totalColumn; 
    ArrayList<String> columnList;
    String Value[];
    String str="";
    public InsertQueryFrame() {
        initComponents();
        super.setLocationRelativeTo(null);
        btnBrowse.setEnabled(false);
        btnOK.setEnabled(false);
        txtValue.requestFocus();       
         loadTableName();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jcTableName = new javax.swing.JComboBox<>();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblColumnName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtValue = new javax.swing.JTextField();
        btnBrowse = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        lblMsg = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Insert");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Select table:");

        jcTableName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTableNameActionPerformed(evt);
            }
        });

        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setText("Pevious");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Column"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblColumnName, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblColumnName, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Value"));

        txtValue.setToolTipText("");
        txtValue.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValueFocusGained(evt);
            }
        });
        txtValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValueKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btnBrowse.setText("Browse");
        btnBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrowseActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcTableName, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnPrevious)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBrowse))))
                .addGap(0, 8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcTableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(btnBrowse)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPrevious)
                    .addComponent(btnNext))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBack)
                        .addComponent(btnOK))
                    .addComponent(lblMsg, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
      QuerySelectionFrame qsf=new QuerySelectionFrame();
      qsf.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrowseActionPerformed
        FileChooserFrame fcf=new FileChooserFrame();
        this.dispose();
        fcf.setVisible(true);
    }//GEN-LAST:event_btnBrowseActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        count++;
        lblColumnName.setText(columnList.get(count));
        txtValue.requestFocus();
        totalColumn=columnList.size();
        txtValue.setText(Value[count]);
        checkBLOBDatatype();
        if(count>=1)
            btnPrevious.setEnabled(true);
        if(count==totalColumn-1)
        {
            btnNext.setEnabled(false);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        --count; 
        lblColumnName.setText(columnList.get(count));
        txtValue.requestFocus();
        txtValue.setText(Value[count]);
        totalColumn=columnList.size();
        checkBLOBDatatype();
        if(count<=1)
            btnNext.setEnabled(true);
        if(count==0)
            btnPrevious.setEnabled(false);
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
       str="INSERT INTO "+jcTableName.getSelectedItem().toString()+" VALUES(";
       for(int i=0;i<columnList.size();i++)
       {   
           String dt=dataType(jcTableName.getSelectedItem().toString(),columnList.get(i));
           if(dt.equals("VARCHAR2")||dt.equals("CHAR")||dt.equals("DATE"))
            str=str+"'"+Value[i]+"'";
           else
            str=str+Value[i];
           if(i!=columnList.size()-1)
            str=str+",";
           else
            str=str+")";
       }
        System.out.println(str);
        try
        {
            int res=DatabaseDAO.runQuery(str);
            if(res!=0)
             {
                JOptionPane.showMessageDialog(null,"Inserted Successfully.","Success ",JOptionPane.INFORMATION_MESSAGE);
             }
             else
                JOptionPane.showMessageDialog(null,"Record not Insert","Error ",JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException ex)
        {
            JOptionPane.showMessageDialog(null, "SQLException "+ex,"Error ",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnOKActionPerformed

    private void jcTableNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTableNameActionPerformed
       loadColumn();
       btnPrevious.setEnabled(false);
       btnNext.setEnabled(false);
       txtValue.setText("");
       count=0;
       lblColumnName.setText(columnList.get(count));
       Value=new String[columnList.size()];
    }//GEN-LAST:event_jcTableNameActionPerformed

    private void txtValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValueKeyReleased
       Value[count]=txtValue.getText();    
       if(Value[count].equals(""))
          btnNext.setEnabled(false);
       else if(count!=totalColumn-1)
          btnNext.setEnabled(true);
       if(count==totalColumn-1)
        {
           if(Value[totalColumn-1].equals("")==false)
               btnOK.setEnabled(true);
           else
               btnOK.setEnabled(false);
        }
       checkINTDatatype();
    }//GEN-LAST:event_txtValueKeyReleased

    private void txtValueFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValueFocusGained
        
    }//GEN-LAST:event_txtValueFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertQueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertQueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertQueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertQueryFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertQueryFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBrowse;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> jcTableName;
    private javax.swing.JLabel lblColumnName;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
private  void loadTableName()
{
    try
    {
        ArrayList<String> tableList=DatabaseDAO.getAllTableName();
         if(tableList.isEmpty()==true)
             JOptionPane.showMessageDialog(null, "Sorry.! No Table is created yet","No Record",JOptionPane.INFORMATION_MESSAGE);
        else
        {
        jcTableName.removeAllItems(); 
        for(String tList:tableList)
        jcTableName.addItem(tList);    
        }
    }
    catch(SQLException ex)
    {
      JOptionPane.showMessageDialog(null, "SQLException "+ex,"Error ",JOptionPane.ERROR_MESSAGE);  
    }
}
 private void loadColumn()
 {
  try
  {
    columnList = DatabaseDAO.getAllTableAttribute(jcTableName.getSelectedItem().toString());
  }
  catch(SQLException ex)
  {
    JOptionPane.showMessageDialog(null, "SQLException "+ex,"Error ",JOptionPane.ERROR_MESSAGE);
  }
 }
 private String dataType(String table,String column)
 {
 String DataType="";
 try {
   DataType=DatabaseDAO.getDataType(table,column);
  }
  catch(SQLException ex)
  {
    JOptionPane.showMessageDialog(null, "SQLException "+ex,"Error ",JOptionPane.ERROR_MESSAGE);
  }
 return DataType;
 }
 private void checkBLOBDatatype()
 {
   String dt=dataType(jcTableName.getSelectedItem().toString(),columnList.get(count));
        if(dt.equals("BLOB"))
        {
            btnBrowse.setEnabled(true);
            txtValue.setEnabled(false);
        }
        else
        {   txtValue.setEnabled(true);
            btnBrowse.setEnabled(false);
        }
        if(dt.equals("DATE"))
         lblMsg.setText("Format :26-Jun-1996");
        else
        lblMsg.setText("");
       
 }
 private void checkINTDatatype()
 {
    String dt=dataType(jcTableName.getSelectedItem().toString(),columnList.get(count));
    if(txtValue.getText().isEmpty())
    {
    btnNext.setEnabled(false);
    lblMsg.setText("");
    }
   else if(dt.equals("INT")||dt.equals("NUMBER")||dt.equals("INTEGER"))
    {
      try 
      {
      Integer.parseInt(txtValue.getText());
      if(count!=totalColumn-1)
      {btnNext.setEnabled(true);}
      lblMsg.setText("");
      } 
    catch (NumberFormatException e) 
     {
      lblMsg.setText("Provide Correct Input");
      btnNext.setEnabled(false);
      btnOK.setEnabled(false);
     }
    }
 }
}
