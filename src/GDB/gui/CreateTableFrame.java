/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GDB.gui;

import GDB.dao.DatabaseDAO;
import GDB.pojo.CreateTableObjectPojo;
import GDB.pojo.TableDataStore;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RISHABH SAHU
 */
public class CreateTableFrame extends javax.swing.JFrame {

    /**
     * Creates new form CreateTableFrame
     */
    int index,total_rows;
    DefaultTableModel model;
    public CreateTableFrame() {
        initComponents();
        super.setLocationRelativeTo(null);
        btnEdit.setEnabled(false);
        btnRemove.setEnabled(false);
        btnMoveUp.setEnabled(false);
        btnMoveDown.setEnabled(false);
        btnOK.setEnabled(false);
        txtTableName.setText("Untitled");
        CreateTableObjectPojo.setObj(this);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        txtTableName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnAddColumn = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnMoveUp = new javax.swing.JButton();
        btnMoveDown = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTableData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create Table");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtTableName.setToolTipText("Table Name");

        jLabel1.setText("Table name :");

        btnAddColumn.setText("Add Column");
        btnAddColumn.setToolTipText("Add column to the table.");
        btnAddColumn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddColumnActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnMoveUp.setText("Move Up");
        btnMoveUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveUpActionPerformed(evt);
            }
        });

        btnMoveDown.setText("Move Down");
        btnMoveDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoveDownActionPerformed(evt);
            }
        });

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jtTableData.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jtTableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Key", "Index", "Null", "Unique", "Column name", "Data type", "Size", "Scale", "Default value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTableData.setToolTipText("");
        jtTableData.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtTableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTableDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtTableData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTableName))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 497, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnMoveDown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAddColumn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMoveUp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddColumn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoveUp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMoveDown)))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnBack))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
      QuerySelectionFrame qsf=new QuerySelectionFrame();
      qsf.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAddColumnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddColumnActionPerformed
       this.disable();
       AddColumnFrame acf=new AddColumnFrame();
       acf.setVisible(true);
       index=jtTableData.getSelectedRow();
       total_rows=jtTableData.getRowCount();
    }//GEN-LAST:event_btnAddColumnActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
       this.disable();
       model=(DefaultTableModel)jtTableData.getModel();   //down cast TableModel to DefaultTableModel
       int SelectedRowIndex = jtTableData.getSelectedRow();
       String columnName=model.getValueAt(SelectedRowIndex,4).toString();
       String dataType=model.getValueAt(SelectedRowIndex,5).toString();
       String size=  model.getValueAt(SelectedRowIndex,6).toString();
       String scale=model.getValueAt(SelectedRowIndex,7).toString();
       String defualtValue=  model.getValueAt(SelectedRowIndex,8).toString();
       AddColumnFrame acf=new AddColumnFrame(columnName,dataType,size,scale,defualtValue);
       acf.setVisible(true);  
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
       model=(DefaultTableModel)jtTableData.getModel();
       try
       {
        int SelectedRowIndex = jtTableData.getSelectedRow();
        System.out.println(SelectedRowIndex);
        model.removeRow(SelectedRowIndex);
          btnEdit.setEnabled(false);
          btnRemove.setEnabled(false);
         if(jtTableData.getRowCount()==0)
          btnOK.setEnabled(false);
         btnMoveUp.setEnabled(false);
         btnMoveDown.setEnabled(false);
       }
       catch(Exception ex)
       {
          JOptionPane.showMessageDialog(null, "SQLException "+ex,"Error ",JOptionPane.ERROR_MESSAGE);  
       }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void jtTableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTableDataMouseClicked
        btnRemove.setEnabled(true);
        btnEdit.setEnabled(true); 
        index=jtTableData.getSelectedRow();
        total_rows=jtTableData.getRowCount();
        if(index>0)
            btnMoveUp.setEnabled(true);
        else
            btnMoveUp.setEnabled(false);
        if(index<total_rows-1)
            btnMoveDown.setEnabled(true);
        else
            btnMoveDown.setEnabled(false);
    }//GEN-LAST:event_jtTableDataMouseClicked

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        int no_of_row =jtTableData.getRowCount();
        String colname,dt,size,constraint,defualtValue,scale;
        String str="CREATE TABLE "+txtTableName.getText()+"(";
        for(int row =0;no_of_row>row;row++)
        {
           colname=jtTableData.getModel().getValueAt(row,4).toString();
           dt=jtTableData.getModel().getValueAt(row,5).toString();
           size=jtTableData.getModel().getValueAt(row,6).toString();
           scale=jtTableData.getModel().getValueAt(row,7).toString();
           defualtValue=jtTableData.getModel().getValueAt(row,8).toString();
           //constraint=jtTableData.getModel().getValueAt(row,0).toString();
           if(dt.equals("VARCHAR2")||dt.equals("CHAR")||dt.equals("NUMBER")||dt.equals("FLOAT")||dt.equals("DECIMAL")||dt.equals("CLOB")||dt.equals("NUMRIC")||dt.equals("REAL"))
           {   if(defualtValue.equals(""))
               {
               if(scale.equals(""))    
               str=str+colname+" "+dt+"("+size+")";
               else{
                  if(dt.equals("REAL"))
                  str=str+colname+" "+dt+"("+scale+")";
                  else
                  str=str+colname+" "+dt+"("+size+","+scale+")";}
               }
              else{
               str=str+colname+" "+dt+"("+size+") DEFAULT '"+defualtValue+"'";}
           }
           else
           {  if(defualtValue.equals(""))
              str=str+colname+" "+dt;
              else
              str=str+colname+" "+dt+" DEFAULT '"+defualtValue+"'";
           }
         
           if(row!=no_of_row-1)
           str=str+",";
           else
           str=str+")";
        }
        System.out.println(str);
            try
            {
             DatabaseDAO.runQuery2(str);
             txtTableName.setText("Untitled");
             btnOK.setEnabled(false);
             model.setRowCount(0);
             JOptionPane.showMessageDialog(null, "Table is created Successfully.","Success ",JOptionPane.INFORMATION_MESSAGE);
            }catch(SQLException ex)
            {
              JOptionPane.showMessageDialog(null, "Table is not created ","Error ",JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnMoveUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveUpActionPerformed
        index--;
        if(index==0)
          btnMoveUp.setEnabled(false);  
        else 
          btnMoveDown.setEnabled(true);
        jtTableData.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_btnMoveUpActionPerformed

    private void btnMoveDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoveDownActionPerformed
       index++;
       if(index==total_rows-1)
          btnMoveDown.setEnabled(false);
       else
          btnMoveUp.setEnabled(true);
       jtTableData.setRowSelectionInterval(index, index);
    }//GEN-LAST:event_btnMoveDownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateTableFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateTableFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateTableFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateTableFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CreateTableFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddColumn;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnMoveDown;
    private javax.swing.JButton btnMoveUp;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnRemove;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtTableData;
    private javax.swing.JTextField txtTableName;
    // End of variables declaration//GEN-END:variables
public void showData()
 {
        model=(DefaultTableModel)jtTableData.getModel();   //down cast TableModel to DefaultTableModel
        Object[] rows=new Object[9];    //it is number of Column
        //rows[0]=TableDataStore.getkeyConstraint();
        //rows[1]=TableDataStore.getExamid();
        //rows[2]=TableDataStore.getLanguage();
        //rows[3]=TableDataStore.getRight(); 
        rows[4]=TableDataStore.getColumnName();
        rows[5]=TableDataStore.getDataType();
        rows[6]=TableDataStore.getSize();
        rows[7]=TableDataStore.getScale();
        rows[8]=TableDataStore.getDefaultValue();
        model.addRow(rows);
        btnOK.setEnabled(true);
}
public void showEdit(String col,String DataType,String size,String scale,String defaultValue)
{
/*jtTableData.getModel().setValueAt(true,index, 0);
jtTableData.getModel().setValueAt(true,index, 1);    
jtTableData.getModel().setValueAt(true,index, 2);
jtTableData.getModel().setValueAt(true,index, 3); */   
jtTableData.getModel().setValueAt(col,index, 4);
jtTableData.getModel().setValueAt(DataType,index,5);
jtTableData.getModel().setValueAt(size,index,6);
jtTableData.getModel().setValueAt(scale,index,7);
jtTableData.getModel().setValueAt(defaultValue,index,8);
}
}
